name: Random but genuine daily commit

on:
  schedule:
    - cron: "0 * * * *"     # Runs every hour
  workflow_dispatch: {}      # Allows manual run

permissions:
  contents: write

env:
  THRESHOLD_PERCENT: "4"    # ~1 commit/day if running hourly
  AUTHOR_NAME: "github-actions[bot]"
  AUTHOR_EMAIL: "41898282+github-actions[bot]@users.noreply.github.com"
  LOG_FILE: "daily-log.md"
  TIPS_FILE: "tips.txt"
  ENTRIES_DIR: "entries"
  COUNTER_FILE: "meta/daily_counter.json"

jobs:
  maybe-commit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Decide randomly whether to commit
        id: decide
        run: |
          set -euo pipefail
          THRESHOLD=${THRESHOLD_PERCENT}
          R=$(( (RANDOM % 100) + 1 ))
          echo "Random roll=${R}, threshold=${THRESHOLD}"
          if [ "${R}" -le "${THRESHOLD}" ]; then
            echo "do_commit=true" >> "$GITHUB_OUTPUT"
          else
            echo "do_commit=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Prepare and push commit
        if: steps.decide.outputs.do_commit == 'true'
        run: |
          set -euo pipefail
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          HUMAN_DATE=$(date -u +"%Y-%m-%d %H:%M UTC")

          mkdir -p "${ENTRIES_DIR}" "$(dirname "${COUNTER_FILE}")"

          # Pick a random tip or fallback text
          if [ -f "${TIPS_FILE}" ]; then
            TIP=$(grep -v '^[[:space:]]*$' "${TIPS_FILE}" | shuf -n1)
          else
            TIP="Keep learning â€” one step at a time."
          fi

          # Update log file
          echo "${TIMESTAMP} - ${TIP}" >> "${LOG_FILE}"

          # Create daily entry
          ENTRY_FILE="${ENTRIES_DIR}/entry-$(date -u +'%Y%m%dT%H%M%SZ').md"
          {
            echo "## Quick note (${HUMAN_DATE})"
            echo ""
            echo "- ${TIP}"
            echo ""
            echo "> Logged automatically for repository health and study notes."
          } > "${ENTRY_FILE}"

          # Update counter JSON
          COUNT=$(ls "${ENTRIES_DIR}"/*.md 2>/dev/null | wc -l || echo 0)
          {
            echo "{"
            echo "  \"count\": ${COUNT},"
            echo "  \"last\": \"${TIMESTAMP}\""
            echo "}"
          } > "${COUNTER_FILE}"

          git config user.name "${AUTHOR_NAME}"
          git config user.email "${AUTHOR_EMAIL}"
          git add "${LOG_FILE}" "${ENTRY_FILE}" "${COUNTER_FILE}"

          if git diff --staged --quiet; then
            echo "No changes to commit."
            exit 0
          fi

          msgs=("docs: add daily note"
                "chore: daily log entry"
                "docs: log learning note"
                "feat: add short study note"
                "chore: repo health entry"
                "docs: update study reflections"
                "chore: small random improvement")
          msg=${msgs[$RANDOM % ${#msgs[@]}]}
          git commit -m "${msg}: ${TIMESTAMP}"

          branch="${GITHUB_REF#refs/heads/}"
          [ -z "${branch}" ] && branch="main"
          git push origin HEAD:"${branch}"

      - name: Skip run (no commit today)
        if: steps.decide.outputs.do_commit == 'false'
        run: echo "ðŸ•’ Skipped this hour â€” random check passed with no commit."
